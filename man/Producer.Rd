% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/producer.R
\name{Producer}
\alias{Producer}
\title{A Class for sending signals to a source}
\description{
\strong{Methods}
  \describe{
    \item{\code{initialize(source)}}{
      Creates a Producer object linked to the \code{source}.
    }
    \item{\code{setSource(source)}}{
      Sets the \code{Source} for this producer.
    }
    \item{\code{getSource(source)}}{
      Gets the \code{Source} of this producer.
    }
    \item{\code{fire(signal, obj=NA)}}{
      Sends a signal to the source with associates object \code{obj}.
    }
    \item{\code{fireEval(expr, env)}}{
      Signals for execution of the expression \code{obj} with values from
      the environment (or list) \code{env} substituted in.
    }
    \item{\code{fireDoCall(name, param)}}{
      Signals for execution of the function whose string value is \code{name}
      with the parameters in list \code{param}.
    }
    \item{\code{fireDoCall(name, ...)}}{
      Signals for execution of the function whose string value is \code{name}
      with the parameters \code{...}.
    }
 }
}
\details{
@param obj The object to associate with the signal.
    @param signal A string signal to send.
    @param env An environment or list for substitution
    @param param A list of function parameters.
    @param expr An expression to evaluate.
    @param name the name of the function
    @param ... parameters to be passed to function
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Producer$new()}}
\item \href{#method-setSource}{\code{Producer$setSource()}}
\item \href{#method-getSource}{\code{Producer$getSource()}}
\item \href{#method-fire}{\code{Producer$fire()}}
\item \href{#method-fireEval}{\code{Producer$fireEval()}}
\item \href{#method-fireDoCall}{\code{Producer$fireDoCall()}}
\item \href{#method-fireCall}{\code{Producer$fireCall()}}
\item \href{#method-clone}{\code{Producer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Producer$new(source)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setSource"></a>}}
\subsection{Method \code{setSource()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Producer$setSource(source)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getSource"></a>}}
\subsection{Method \code{getSource()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Producer$getSource()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fire"></a>}}
\subsection{Method \code{fire()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Producer$fire(signal, obj = NA)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fireEval"></a>}}
\subsection{Method \code{fireEval()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Producer$fireEval(expr, env)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fireDoCall"></a>}}
\subsection{Method \code{fireDoCall()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Producer$fireDoCall(name, param)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fireCall"></a>}}
\subsection{Method \code{fireCall()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Producer$fireCall(name, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Producer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
